#include<bits/stdc++.h>
using namespace std;

class Solution{
    public:
   
    //Function to find the sum of contiguous subarray with maximum sum
    
    long long maxSubarraySum(int arr[], int n){
        long long int max=INT_MIN,sum=0;
    
             
        for(int i=0;i<n;i++)
        {
            sum=sum+arr[i];
            if(sum>max)
            {
                max=sum;
            }
            if(sum<0)
            {
                sum=0;
            }
        }
    
        
        
        return max;
    }
};



int main()
{
    int t,n;
    
    cin>>t; //input testcases
    while(t--) //while testcases exist
    {
        
        cin>>n; //input size of array
        
        int a[n];
        
        for(int i=0;i<n;i++)
            cin>>a[i]; //inputting elements of array
            
        Solution ob;
        
        cout << ob.maxSubarraySum(a, n) << endl;
    }
}
// Time Complexity: O(N)
// Space Complexity: O(1)